<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:NumberRecognizer.App"
    xmlns:data="using:NumberRecognizer.App.DataModel"
    xmlns:common="using:NumberRecognizer.App.Common"
    xmlns:converter="using:NumberRecognizer.App.Converter"
    xmlns:mv="using:NumberRecognizer.App.ViewModel"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:chart="using:De.TorstenMandelkow.MetroChart"
    xmlns:design="using:NumberRecognizer.App.ViewModel.Design"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    x:Name="pageRoot"
    x:Class="NumberRecognizer.App.View.GroupedNetworksPage"
    d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=design:DesignGroupedNetworksPageViewModel}"
    mc:Ignorable="d">

    <Page.Resources>
        <x:String x:Key="ChevronGlyph">&#xE26B;</x:String>
        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="GroupedNetworksViewSource"
            Source="{Binding NetworkGroups}"
            IsSourceGrouped="True"
            ItemsPath="Networks" />
        <converter:DateTimeToStringConverter x:Key="dateTimeToStringConverter"/>
        <converter:BooleanToVisibilityConverter x:Key="booleanVisibiltyConverter" />
    </Page.Resources>

    <Page.DataContext>
        <mv:GroupedNetworksPageViewModel/>
    </Page.DataContext>
    <Page.BottomAppBar >
        <AppBar x:Name="appBar" Background="Orange" IsOpen="{Binding IsAppBarOpen, Mode=TwoWay}" Closed="AppBar_Closed"  >
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"  Grid.Column="0" HorizontalAlignment="Left">
                    <AppBarButton Label="Network Details" Icon="More" Command="{Binding NetworkDetails}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal"  Grid.Column="1" HorizontalAlignment="Right">
                    <AppBarButton Label="Create new Network" Icon="Add" Command="{Binding CreateNetworkCommand}"/>
                    <AppBarButton Label="Delete selected Network" Icon="Delete" Command="{Binding DeleteNetworkCommand}"/>
                    <AppBarSeparator/>
                    <AppBarButton Icon="Sync" Label="Refresh" Command="{Binding RefreshCommand}"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<Grid.ChildrenTransitions>
			<TransitionCollection>
				<EntranceThemeTransition/>
			</TransitionCollection>
		</Grid.ChildrenTransitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="140"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

        <!-- Horizontal scrolling grid -->
        <GridView
			x:Name="networkGridView"
            AutomationProperties.AutomationId="NetworkGridView"
			AutomationProperties.Name="Grouped Networks"
			common:ItemClickCommand.Command="{Binding NetworkClicked}"
            common:SelectionChangedCommand.Command="{Binding SelectionChanged}"
			Grid.RowSpan="2"
			Padding="116,137,40,46"
			ItemsSource="{Binding Mode=TwoWay, Source={StaticResource GroupedNetworksViewSource}}"
			SelectionMode="Single"
			SelectedItem="{Binding SelectedNetwork, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			IsSwipeEnabled="true"
			IsItemClickEnabled="True" >
            <GridView.ItemTemplate>
				<DataTemplate>
					<Grid HorizontalAlignment="Left" Width="300" Height="300"
						Background="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" >
						<Border VerticalAlignment="Top">
							<Viewbox Height="200" >
								<chart:ClusteredColumnChart
									Visibility="{Binding Calculated, Converter={StaticResource booleanVisibiltyConverter}}"
									Background="Transparent"
									Style="{StaticResource ChartStyleVariableSize}"
									ChartTitle=""
                                    Palette="{StaticResource CustomColors}"
									ChartTitleVisibility="Collapsed"
									ChartLegendVisibility="Collapsed"
									ChartSubTitle="">
									<chart:ClusteredColumnChart.Series>
										<chart:ChartSeries 
											SeriesTitle="Fitness"
											ItemsSource="{Binding ChartFitness}" 
											DisplayMember="Name" 
											ValueMember="Value" />
									</chart:ClusteredColumnChart.Series>
								</chart:ClusteredColumnChart>
							</Viewbox>
						</Border>
						<Border VerticalAlignment="Top">
							<Image Margin="0,-20,0,0" Source="ms-appx:///Assets/Logo.png"  Visibility="{Binding Calculated, ConverterParameter=true, Converter={StaticResource booleanVisibiltyConverter}}" />
						</Border>
						<StackPanel VerticalAlignment="Bottom" Background="{ThemeResource ListViewItemOverlayBackgroundThemeBrush}">
							<!--<TextBlock Text="{Binding Network.NetworkId}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}" Height="60" Margin="15,0,15,0"/>-->
							<!--<TextBlock Text="{Binding Network.NetworkName}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}" Height="60" Margin="15,0,15,0"/>-->
							<StackPanel Orientation="Horizontal" Margin="5">
								<TextBlock Text="Name:&#x9;" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
								<TextBlock Text="{Binding NetworkName}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="5" Visibility="{Binding Calculated, Converter={StaticResource booleanVisibiltyConverter}}" >
								<TextBlock Text="Fitness:&#x9;" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
								<TextBlock Text="{Binding NetworkFitness}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}"  Style="{StaticResource TitleTextBlockStyle}" />
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="5" Visibility="{Binding Calculated, Converter={StaticResource booleanVisibiltyConverter}}">
								<TextBlock Text="Start:&#x9;" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
								<TextBlock Text="{Binding CalculationStart, Converter={StaticResource dateTimeToStringConverter}}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" Margin="5" Visibility="{Binding Calculated, Converter={StaticResource booleanVisibiltyConverter}}" >
								<TextBlock Text="End:&#x9;" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
								<TextBlock Text="{Binding CalculationEnd, Converter={StaticResource dateTimeToStringConverter}}" Foreground="{ThemeResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextBlockStyle}"/>
							</StackPanel>
						</StackPanel>
					</Grid>
				</DataTemplate>
			</GridView.ItemTemplate>
			<GridView.ItemsPanel>
				<ItemsPanelTemplate>
					<ItemsWrapGrid GroupPadding="0,0,70,0"/>
				</ItemsPanelTemplate>
			</GridView.ItemsPanel>
            <GridView.GroupStyle>
                <GroupStyle HidesIfEmpty="True">
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,2">
                                <Button Foreground="OrangeRed"
									Style="{StaticResource TextBlockButtonStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" Margin="0,-11,10,10" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="NoWrap" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-11,0,10" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="NoWrap" />
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </GridView.GroupStyle>
        </GridView>

		<!-- Back button and page title -->
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="120"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Button x:Name="backButton" Margin="39,59,39,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
				Style="{StaticResource NavigationBackButtonNormalStyle}"
				VerticalAlignment="Top"
				AutomationProperties.Name="Back"
				AutomationProperties.AutomationId="BackButton"
				AutomationProperties.ItemType="Navigation Button"/>
			<Image Grid.Column="1" Width="120" Height="Auto" Source="ms-appx:///Assets/Logo.png" Margin="20,0" />
			<StackPanel Orientation="Horizontal" Grid.Column="2">
				<TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Style="{StaticResource CustomHeaderTextBlockStyle}" />
			</StackPanel>
            <ProgressRing Grid.Column="2" x:Name="processRingObj" Height="100" Width="100" Foreground="Orange" 
                          Visibility="{Binding IsLoading, Converter={StaticResource booleanVisibiltyConverter}, ConverterParameter=False}"  
                          IsActive="{Binding IsLoading}" />
		</Grid>
	</Grid>
</Page>
